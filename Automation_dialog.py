# -*- coding: utf-8 -*-
"""
/***************************************************************************
 TestDialog
                                 A QGIS plugin
 Testing automation
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-06-03
        git sha              : $Format:%H$
        copyright            : (C) 2024 by SCD/Hazel
        email                : hhanson-stewart@SCD-ltd.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
import sys

# --------------------
# pydev:

# Add the path to the PyDev debugger to the system path
pydevd_path = os.path.join(os.path.dirname(__file__), 'debug')
if pydevd_path not in sys.path:
    sys.path.append(pydevd_path)

#from .debug import pydevd
sys.path.append('C:\\Users\\hhanson-stewart\\AppData\\Roaming\\QGIS\\QGIS3\\profiles\\default\\python\\plugins\\automation\\debug')

try:
    import pydevd
    pydevd.settrace('localhost', port=5678, stdoutToServer=True, stderrToServer=True, suspend=False)
except ImportError:
    # Handle the case where the PyDev debugger is not available
    print("PyDev debugger not found. Remote debugging will not be enabled.")
# --------------------
# AutoSpan imports:
from qgis.core import QgsApplication
# --------------------
from qgis.core import QgsProcessing
from qgis.core import QgsProcessingAlgorithm
from qgis.core import QgsProcessingMultiStepFeedback
from qgis.core import QgsProcessingParameterMapLayer
from qgis.core import QgsProcessingParameterFeatureSink
import processing
# --------------------

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from PyQt5 import QtCore


# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'Automation_dialog_base.ui'))


class TestDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(TestDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        
        # run OSGeo4W Shell (taskbar search); With "pyrcc5 resources.qrc -o resources.py" commands (dont forget to CD to plugin path location first)
        # see here for further details: https://youtu.be/GccxvQ1ypbc?si=sC99G1GeFhVyta1A&t=250
        
        self.setupUi(self)